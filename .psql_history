_HiStOrY_V2_
\l
\c jwtauth
\c jwtauth
CREATE DATABASE jwtauth;
CREATE DATABASE jwtauth;
\c jwtauth
\dt
CREATE DATABASE todo;
\l
\c todo
\c
\c perntodo
\c perntodo
\c perntodo
CREATE DATABASE perntodo;
\c perntodo
\dt
CREATE TABLE todo(    todo_id SERIAL PRIMARY KEY,    description VARCHAR(255) ); 
\dt
SELECT * FROM todo;
INSERT INTO todo(description) VALUES('I have to eat Pizza!');
SELECT * FROM todo;
SELECT description FROM todo;
SELECT *  FROM todo;
UPDATE todo_id FROM todo; SET todo_id = 3 WHERE id = 3
UPDATE todoSET todo_id = 3WHERE todo_id = 3;
BEGIN;UPDATE todo SET todo_id = -1 WHERE todo_id = 3;UPDATE todo SET todo_id = 3 WHERE todo_id = 4;UPDATE todo SET todo_id = 4 WHERE todo_id = -1;COMMIT;
SELECT *  FROM todo;
CREATE TABLE test_table (  id SERIAL PRIMARY KEY,  name VARCHAR(100));
SELECT * FROM usersSELECT *  FROM users;
SELECT * FROM users;
\dt
SELECT * FROM test_table;
SELECT * FROM todo ORDER BY todo_id;
INSERT INTO todo (description) VALUES ('Finish React project');
UPDATE todo SET description = 'Updated task' WHERE todo_id = 1;
SELECT * FROM todo ORDER BY todo_id;
DELETE FROM todo WHERE todo_id = 1;
SELECT * FROM todo ORDER BY todo_id;
BEGIN;-- Reassign todo_id manuallyUPDATE todo SET todo_id = 1 WHERE description = 'I have to eat Pizza!';UPDATE todo SET todo_id = 2 WHERE description = 'I need to clean my dog';UPDATE todo SET todo_id = 3 WHERE description = 'I need to clean my car';UPDATE todo SET todo_id = 4 WHERE description = 'Finish React project';-- Reset the sequence (assuming your sequence is called todo_todo_id_seq)-- This sets the next ID to 5SELECT setval('todo_todo_id_seq', 4);COMMIT;
SELECT * FROM todo ORDER BY todo_id;
SELECT * FROM todo ORDER BY todo_id;
CREATE DATABASE quickmark_db;
\c quickmark_db
CREATE TABLE users (    id SERIAL PRIMARY KEY,    email VARCHAR(255) UNIQUE NOT NULL,    password_hash VARCHAR(255) NOT NULL,    name VARCHAR(255) NULL,    role VARCHAR(50) NOT NULL DEFAULT 'student',    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);
INSERT INTO users (email, password_hash, name, role) VALUES('admin@example.com', '$2b$10$rvVJVM/j0jhL7CLmAl8LzOkCGG2V4sypgz1uB6hsd9EjxHn96/AjG', 'Admin User', 'admin');
\q
CREATE DATABASE quickmark_db;
\c quickmark_db
\i sql/schema.sql
\i /Users/srinivasch/attendance-intern/backend/sql/schema.sql
\dt
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
\dx
\dt
\i /Users/srinivasch/attendance-intern/backend/sql/schema.sql
\q
SELECT * FROM quickmark_db;
\dt
SELECT * FROM users
\l
SELECT * FROM users;
SELECT * FROM users;
SELECT * FROM attendance_records;
\dt
psql -U postgres -d quickmark_dbINSERT INTO departments (name) VALUES ('ECE') ON CONFLICT (name) DO NOTHING RETURNING department_id;
\q
INSERT INTO departments (name) VALUES ('ECE') ON CONFLICT (name) DO NOTHING RETURNING department_id;
INSERT INTO departments (name) VALUES ('IT') ON CONFLICT (name) DO NOTHING RETURNING department_id;
INSERT INTO departments (name) VALUES ('IT-BI') ON CONFLICT (name) DO NOTHING RETURNING department_id;
psql -U postgres -d quickmark_db;
psql -U postgres -d quickmark_dbSELECT * FROM departments;
\q
SELECT * FROM departments;
\q
SELECT faculty_id, name, email, password_hash FROM faculties WHERE email = 'mukesh.adani@example.com';
\q
CREATE DATABASE timetable_dbCREATE DATABASE timetable_db;
q
\q
CREATE DATABASE timetable_db;
\q
q
\q
\i /Users/srinivasch/attendance-intern/backend/sql/schema.sql
\q
\i /Users/srinivasch/attendance-intern/backend/sql/schema.sql
\dt
\q
q
\q
\d students
DROP TABLE IF EXISTS students CASCADE;
\i /Users/srinivasch/attendance-intern/backend/sql/schema.sql
\d students
\q
\i /Users/srinivasch/attendance-intern/backend/sql/schema.sql
\q
\i /Users/srinivasch/attendance-intern/backend/sql/schema.sql
\q
psql -U postgres -d quickmark_dbSELECT email, password_hash FROM faculties WHERE email = 'adithya@gmail.com';
\q
SELECT * FROM departments;
SELECT * FROM departments;
SELECT * FROM departments;
SELECT * FROM departments;
SELECT * FROM departments;
SELECT * FROM departments;
SELECT * FROM departments;
SELECT * FROM subjects;
SELECT * FROM subjects;
SELECT * FROM subjects;
SELECT * FROM departments;
\d app_settings
\dt
\d app_settings
\dt
\q
\dt
\i /Users/srinivasch/attendance-intern/backend/sql/schema.sql
\q
\i /Users/srinivasch/Downloads/code-test-main/backend/sql/schema.sql
\dt
SELECT * FROM departmentsq
\q
